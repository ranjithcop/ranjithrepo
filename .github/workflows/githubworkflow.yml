# This is a basic workflow to help you get started with Actions
 
name: GithubWorkflow
 
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: 
  #     - "main"
  # pull_request:
  #   branches: 
  #     - "main"
 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
 
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "Build"
  Build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - name: "Build"
        run: echo "Build"
 
  Test:
    needs: Build  # "Test" depends on the successful completion of the "Build" job
    runs-on: ubuntu-latest
    steps:
      - name: "Test Step of the workflow/pipeline"
        run: echo "Test Step"
 
  ServiceNowDevOpsChange:
    # jobs that must complete successfully before this job will run
    needs: Test
    # type of machine to run the job on
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Change'
    steps:
     - name: ServiceNow Change
       uses: ServiceNow/servicenow-devops-change@v4.0.0
       with:
        # Devops Integration Token
        devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
        # ServiceNow Instance URL
        instance-url: ${{ secrets.SN_INSTANCE_URL }}
        # Orchestration Tool Id
        tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
        # GitHub Context
        context-github: ${{ toJSON(github) }}
        # Display Name of the Job
        job-name: 'ServiceNow DevOps Change'
        change-request: '{"setCloseCode":"true","autoCloseChange":true,"attributes":{"requested_by":{"name": "Ranjith Kariminlla"},"assignment_group":{"name": "SD_GLOBAL_APPS_SCT TECH"},"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed","cmdb_ci":{"name": "ServiceNow Prod Core System"},"location":{"name":"Americas"},"justification":"justification","u_validation_plan":"Validation_plan","u_communication_plan":"communication_plan","start_date": "2025-01-31 11:59:59","end_date": "2025-02-01 11:59:59"}}'
        interval: '100'
        changeCreationTimeOut: '3600'
        abortOnChangeCreationFailure: true
        abortOnChangeStepTimeout: true
